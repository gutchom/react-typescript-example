{
  "name": "react-typescript-example",
  "version": "1.0.0",
  "description": "Sample project with React.js written in TypeScript",
  "author": "gutchom",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/gutchom/react-typescript-example"
  },
  "bugs": {
    "url": "https://github.com/gutchom/react-typescript-example/issues"
  },
  "engines": {
    "node": "^8.*",
    "npm": "^5.*"
  },
  "scripts": {
    "start": "cross-env NODE_ENV=development npm-run-all --silent -s clean -p watch:* server:*",
    "test": "cross-env NODE_ENV=test karma start",
    "testing": "npm run test -- --auto-watch --no-single-run",
    "image": "cpx './src/images/**/*.{jpg,png,gif,svg}' './public/img'",
    "style": "postcss ./src/styles/**/*.css -b ./src/styles -d ./public/css",
    "script": "webpack --progress",
    "build": "cross-env NODE_ENV=production npm-run-all --silent lint:* test clean build:*",
    "build:image": "npm run image",
    "build:style": "npm run style -- --no-map",
    "build:script": "npm run script",
    "watch:image": "npm run image -- -w",
    "watch:style": "npm run style -- -w",
    "watch:script": "npm run script -- -w",
    "lint:style": "stylelint --fix ./src/styles/**/*.css",
    "lint:script": "tslint -p tsconfig.json  --type-check --fix ./src/{scripts,test}/**/*.{ts,tsx}",
    "server:mock": "cross-env PORT=${OBSERVE_2CH_PORT-3000} nodemon -w ./server ./server",
    "server:sync": "browser-sync start -b 'google chrome' -f ./public -p localhost:${OBSERVE_2CH_PORT-3000} --port ${OBSERVE_2CH_SYNC-3333}",
    "clean": "rimraf ./public && mkdirp ./public/js ./public/css ./public/img"
  },
  "dependencies": {
    "@tweenjs/tween.js": "^17.1.1",
    "axios": "^0.16.2",
    "eventemitter3": "^2.0.3",
    "normalize.css": "^7.0.0",
    "react": "^16.0.0",
    "react-dom": "^16.0.0",
    "typescript": "^2.5.3",
    "url-search-params-polyfill": "^2.0.1"
  },
  "devDependencies": {
    "@types/enzyme": "^3.1.0",
    "@types/eventemitter3": "^2.0.2",
    "@types/mocha": "^2.2.43",
    "@types/node": "^8.0.46",
    "@types/power-assert": "^1.4.29",
    "@types/react": "^16.0.15",
    "@types/react-dom": "^16.0.2",
    "@types/sinon": "^2.3.6",
    "@types/tween.js": "16.9.0",
    "babel-core": "^6.26.0",
    "babel-loader": "^7.1.2",
    "babel-plugin-transform-class-properties": "^6.24.1",
    "babel-plugin-transform-decorators-legacy": "^1.3.4",
    "babel-plugin-transform-object-rest-spread": "^6.26.0",
    "babel-preset-airbnb": "^2.4.0",
    "babel-preset-env": "^1.6.1",
    "babel-preset-power-assert": "^1.0.0",
    "babel-preset-react": "^6.24.1",
    "babel-preset-stage-2": "^6.24.1",
    "browser-sync": "^2.18.13",
    "caniuse-lite": "^1.0.30000748",
    "case-sensitive-paths-webpack-plugin": "^2.1.1",
    "colors": "^1.1.2",
    "cpx": "^1.5.0",
    "cross-env": "^5.1.0",
    "cssnano": "^3.10.0",
    "enzyme": "^3.1.0",
    "enzyme-adapter-react-16": "^1.0.2",
    "eslint": "^4.9.0",
    "express": "^4.16.2",
    "glob": "^7.1.2",
    "karma": "^1.7.1",
    "karma-chrome-launcher": "^2.2.0",
    "karma-coverage": "^1.1.1",
    "karma-mocha": "^1.3.0",
    "karma-mocha-reporter": "^2.2.5",
    "karma-power-assert": "^1.0.0",
    "karma-sourcemap-loader": "^0.3.7",
    "karma-sourcemap-writer": "^0.1.2",
    "karma-webpack": "^2.0.5",
    "mkdirp": "^0.5.1",
    "mocha": "^4.0.1",
    "nodemon": "^1.12.1",
    "npm-run-all": "^4.1.1",
    "postcss": "^6.0.13",
    "postcss-browser-reporter": "^0.5.0",
    "postcss-cli": "^4.1.1",
    "postcss-cssnext": "^3.0.2",
    "postcss-import": "^11.0.0",
    "postcss-reporter": "^5.0.0",
    "power-assert": "^1.4.4",
    "pug": "^2.0.0-rc.4",
    "react-test-renderer": "^16.0.0",
    "rimraf": "^2.6.2",
    "sinon": "^4.0.1",
    "stylelint": "^8.2.0",
    "stylelint-config-standard": "^17.0.0",
    "stylelint-order": "^0.7.0",
    "ts-loader": "^3.0.3",
    "tslint": "5.7.0",
    "uglify-js": "^3.1.4",
    "webpack": "^3.8.1"
  },
  "browserslist": [
    "> 5%",
    "last 2 versions"
  ],
  "stylelint": {
    "extends": "stylelint-config-standard",
    "plugins": [
      "stylelint-order"
    ],
    "rules": {
      "order/properties-alphabetical-order": true,
      "order/order": [
        "custom-properties",
        "declarations"
      ]
    }
  },
  "babel": {
    "presets": [
      "env",
      "react",
      "stage-2"
    ],
    "plugins": [
      "transform-decorators-legacy",
      "transform-class-properties",
      "syntax-object-rest-spread"
    ],
    "env": {
      "test": {
        "presets": [
          "airbnb",
          "power-assert"
        ]
      }
    }
  }
}
